<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gdu.academix.mapper.UserMapper">

	<resultMap type="EmployeesDto" id="EmployeesMap">
	  <id     property="employeeNo"         column="EMPLOYEE_NO"/>
	  <result property="name"               column="NAME"/>
	  <result property="email"              column="EMAIL"/>
	  <result property="password"           column="PASSWORD"/>
	  <result property="phone"              column="PHONE"/>
	  <result property="address"            column="ADDRESS"/>
	  <result property="profilePicturePath" column="PROFILE_PICTURE_PATH"/>
	  <result property="employeeStatus"     column="EMPLOYEE_STATUS"/>
	  <result property="hireDate"           column="HIRE_DATE"/>
	  <result property="exitDate"           column="EXIT_DATE"/>
    <association property="depart" javaType="DepartmentsDto">
      <id     property="departmentNo"   column="DEPARTMENT_NO"/>
      <result property="departName"     column="DEPART_NAME"/>
      <result property="parentDepartNo" column="PARENT_DEPART_NO"/>
    </association>
    <association property="rank" javaType="RanksDto">
      <id     property="rankNo"    column="RANK_NO"/>
      <result property="rankTitle" column="RANK_TITLE"/>
    </association>
	</resultMap>


  <!-- (로그인)수정함 - 24/05/28 -->
  <select id="getUserByMap"
          parameterType="Map"
          resultMap="EmployeesMap">
		SELECT EMPLOYEE_NO, NAME, EMAIL, PHONE, ADDRESS, DEPARTMENT_NO, RANK_NO, PASSWORD, PROFILE_PICTURE_PATH, EMPLOYEE_STATUS, HIRE_DATE, EXIT_DATE
		  FROM EMPLOYEES_T
    <where>
      <if test="email!=null">EMAIL = #{email}</if>
      <if test="password!=null">AND PASSWORD = #{password}</if>
    </where>
  </select>

  <select id="getLeaveUserByMap"
          parameterType="Map"
          resultType="LeaveUserDto">
    SELECT LEAVE_USER_NO
      FROM LEAVE_USER_T
    <where>
      <if test="email!=null">EMAIL = #{email}</if>
    </where>
  </select>

  <insert id="insertUser"
          parameterType="UserDto">
    INSERT INTO USER_T (
        USER_NO
      , EMAIL
      , PW
      , NAME
      , GENDER
      , MOBILE
      , EVENT_AGREE
      , SIGNUP_KIND
      , PW_MODIFY_DT
      , SIGNUP_DT
    ) VALUES (
        USER_SEQ.NEXTVAL
      , #{email}
      , #{pw}
      , #{name}
      , #{gender}
      , #{mobile}
      , #{eventAgree}
      , 0
      , CURRENT_DATE
      , CURRENT_DATE
    )
  </insert>

  <delete id="deleteUser">
    DELETE
      FROM USER_T
     WHERE USER_NO = #{userNo}
  </delete>

  <insert id="insertAccessHistory"
          parameterType="Map">
    INSERT INTO ACCESS_HISTORY_T (
        ACCESS_HISTORY_NO
      , EMAIL
      , IP
      , USER_AGENT
      , SESSION_ID
      , SIGNIN_DT
      , SIGNOUT_DT
    ) VALUES (
        ACCESS_HISTORY_SEQ.NEXTVAL
      , #{email}
      , #{ip}
      , #{userAgent}
      , #{sessionId}
      , CURRENT_DATE
      , NULL
    )
  </insert>
  
  <update id="updateAccessHistory">
    UPDATE ACCESS_HISTORY_T
       SET SIGNOUT_DT = CURRENT_DATE
     WHERE SESSION_ID = #{sessionId} 
  </update>
  
  <!-- 오채원 - 추가(24/05/28) -->
  <select id="getUserList"
          resultMap="EmployeesMap">
	SELECT E.EMPLOYEE_NO, E.NAME, E.EMAIL, E.PASSWORD, E.PHONE, E.ADDRESS, E.PROFILE_PICTURE_PATH, D.DEPARTMENT_NO, R.RANK_NO, E.EMPLOYEE_STATUS, E.HIRE_DATE, E.EXIT_DATE, D.PARENT_DEPART_NO, D.DEPART_NAME, R.RANK_TITLE
	  FROM EMPLOYEES_T E INNER JOIN DEPARTMENTS_T D ON D.DEPARTMENT_NO = E.DEPARTMENT_NO 
	                     INNER JOIN RANKS_T R ON R.RANK_NO = E.RANK_NO
	 ORDER BY R.RANK_NO
 </select>
  
  <select id="getDepartmentsList"
		  		resultType="departmentsDto">
	SELECT DEPARTMENT_NO, DEPART_NAME, PARENT_DEPART_NO
	  FROM DEPARTMENTS_T
  </select>  
  
  <select id="getUserProfileByNo"
  				parameterType="int"
  				resultMap="EmployeesMap">
		SELECT E.EMPLOYEE_NO, E.NAME, E.EMAIL, E.PASSWORD, E.PHONE, E.ADDRESS, E.PROFILE_PICTURE_PATH, D.DEPARTMENT_NO, R.RANK_NO, E.EMPLOYEE_STATUS, E.HIRE_DATE, E.EXIT_DATE, D.PARENT_DEPART_NO, D.DEPART_NAME, R.RANK_TITLE
		  FROM EMPLOYEES_T E INNER JOIN DEPARTMENTS_T D ON D.DEPARTMENT_NO = E.DEPARTMENT_NO 
		                     INNER JOIN RANKS_T R ON R.RANK_NO = E.RANK_NO
		 WHERE E.EMPLOYEE_NO = #{employeeNo}
	</select>

	
	<select id="getUserProfileList"
			resultMap="EmployeesMap">
		SELECT E.EMPLOYEE_NO, E.NAME, E.EMAIL, E.PASSWORD, E.PHONE, E.ADDRESS, E.PROFILE_PICTURE_PATH, D.DEPARTMENT_NO, R.RANK_NO, E.EMPLOYEE_STATUS, E.HIRE_DATE, E.EXIT_DATE, D.PARENT_DEPART_NO, D.DEPART_NAME, R.RANK_TITLE
		  FROM EMPLOYEES_T E INNER JOIN DEPARTMENTS_T D ON D.DEPARTMENT_NO = E.DEPARTMENT_NO 
		                     INNER JOIN RANKS_T R ON R.RANK_NO = E.RANK_NO
		 WHERE E.EMPLOYEE_NO IN 
     <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
         #{item}
     </foreach>
	</select>
  

  
  
  

</mapper>